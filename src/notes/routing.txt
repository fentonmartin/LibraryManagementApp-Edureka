Routing:
1. Functionality to define the routes in client side app.
2. There will be no page reload.
3. Navigation are importan so we can show seperate manus in app.


How to use it.
1. import { RouterModule } from '@angular/router'; and add in imports array.

<router-outlet></router-outlet> we should place this on our root component.

important things to remember:
1. routerLink
2. "Router" service which will be used for Navigation from typescript
3. "ActivatedRoute" service : to access querystring params.

routing guards:
What:
1. Proide authorization to secured area.

How:
1. run "ng g guard <guardName>"

types: 
1. canActivate : to check if we can access the route.
2. CanDeactivate: to check if we can ove away from route.
3. canActivateChild
4. canDeactivateChild
5. resolve: To prefetch the data.

Nested Routes:
To load multiple child components on same view.

Lazy Loading:
1. On demand loading.
2. it should be applied to the rarely used module.

Pre-requisite:
1. we need feature module.
2. feature module should not be part off any imports array. 
3. if we have routing configuration in featur module, the parent route should not have 
any url in path.
4. we should provide the route path in routingmodule.
5. use loadChildren propery, this will take relative path of your module and append 
you module class name with #.
6. feature module should not share anything with other modules/component.